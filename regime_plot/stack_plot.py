import pandas as pd
import numpy as np
import matplotlib.pyplot as plt


data = pd.read_csv('regime_plot/results_8_4.csv', index_col=0)
"""
if the date is in the format of yyyy-dd-mm, we need the line below to transform that to 'yyyy-mm-dd'
"""
# data.index = data.index.str[0:4] + data.index.str[-3::] + data.index.str[4:7]
data.index = pd.to_datetime(data.index)


def plot_regime(data, regime_num=4, distribution=False, save_path=False):
    """
    the function to plot the regime detection result of its distribution
    :param data: The input data is the result generated by the GMM model
                 one thing to notice is the date should be in the format of "yyyy-mm-dd"
                 and index is date
    :param regime_num: the number of regimes
    :param distribution: True or False: to indicate if we want to plot the distritbution or just the regime
    :param save_path: the path you want to store in
    :return:
    """
    new_df = pd.DataFrame(data.iloc[:, -regime_num::].values, index=data.index,
                          columns=['Regime '+str(x) for x in range(1,1+regime_num)])
    temp_array = np.zeros(shape=(len(new_df), regime_num))
    temp_array[np.arange(len(new_df)), np.array(new_df).argmax(1)] = 1
    fig, ax = plt.subplots(figsize=(25,9))
    if distribution:
        ax.stackplot(new_df.index, new_df.T, labels=new_df.columns)
        plt.title('Regime Distribution for Each Day')
    else:
        ax.stackplot(new_df.index, temp_array.T, labels=new_df.columns)
        plt.title("Regime Detection Result")
        ax.axes.get_yaxis().set_visible(False)
    plt.legend()
    if save_path:
        plt.savefig(save_path)
    plt.show()

plot_regime(data)
plot_regime(data, distribution=True)
# plot_regime(data, save_path='sample_regime.png')
# plot_regime(data, distribution=True, save_path='sample_dist.png')

